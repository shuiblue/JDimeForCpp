var clientCodeH = 
'#include <stdlib.h>\n'
+ '#include <stdio.h>\n'
+ '#include <string.h>\n'
+ '#include "Client.h"\n'

+ '//----encrypt ----\n'
+ 'void\n'
+ 'encrypt (struct client *client, struct email *msg)\n'
+ '{\n'
+ '  NODE *foundPublicKeyPair =\n'
+ '    list_find (client->userPublicKeyPairs, findUserPublicKeyPair, msg->to);\n'
+ '  if (foundPublicKeyPair)\n'
+ '    {\n'
+ '      msg->encryptionKey =\n'
+ '  strdup (((struct userPublicKeyPair *) foundPublicKeyPair->data)->\n'
+ '    publicKey);\n'
+ '      msg->isEncrypted = 1;\n'
+ '    }\n'
+ '}\n'
+ '//----encrypt ----\n'

+ '//-----decrypt----\n'
+ '// removes the decryption flag if possible\n'
+ 'void\n'
+ 'decrypt (struct client *client, struct email *msg)\n'
+ '{\n'
+ '// VERIFICATION HOOK\n'
+ '  int verificationHook_isKeyPairValid =\n'
+ '    isKeyPairValid (msg->encryptionKey, client->privateKey);\n'
+ '// printf ("\\n> hook\\n%i\\n\\n", verificationHook_isKeyPairValid);\n'
+ '// VERIFICATION HOOK END\n'
+ '  if (!client->privateKey)\n'
+ '    return;\n'
+ '  if (msg->isEncrypted == 1\n'
+ '      && 0 == strcmp (msg->encryptionKey, client->privateKey))\n'
+ '    {\n'
+ '      msg->encryptionKey = NULL;\n'
+ '      msg->isEncrypted = 0;\n'
+ '    }\n'
+ '}';

