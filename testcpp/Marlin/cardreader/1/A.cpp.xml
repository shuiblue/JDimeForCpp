<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C++" filename="testcpp/Marlin/cardreader/1/A.cpp"><constructor><name><name>CardReader</name>::<name>CardReader</name></name><parameter_list>()</parameter_list>
<block>{
   <expr_stmt><expr><name>filesize</name> = 0</expr>;</expr_stmt>
   <expr_stmt><expr><name>sdpos</name> = 0</expr>;</expr_stmt>
   <expr_stmt><expr><name>sdprinting</name> = false</expr>;</expr_stmt>
   <expr_stmt><expr><name>cardOK</name> = false</expr>;</expr_stmt>
   <expr_stmt><expr><name>saving</name> = false</expr>;</expr_stmt>
   <expr_stmt><expr><name>logging</name> = false</expr>;</expr_stmt>
   <expr_stmt><expr><name>autostart_atmillis</name>=0</expr>;</expr_stmt>
   <expr_stmt><expr><name>workDirDepth</name> = 0</expr>;</expr_stmt>
   <expr_stmt><expr><name>file_subcall_ctr</name>=0</expr>;</expr_stmt>
   <expr_stmt><expr><call><name>memset</name><argument_list>(<argument><expr><name>workDirParents</name></expr></argument>, <argument><expr>0</expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>workDirParents</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

   <expr_stmt><expr><name>autostart_stilltocheck</name>=true</expr>;</expr_stmt> <comment type="line">//the SD start is delayed, because otherwise the serial cannot answer fast enough to make contact with the host software.</comment>
   <expr_stmt><expr><name>lastnr</name>=0</expr>;</expr_stmt>
  <comment type="line">//power to SD reader</comment>
  <cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SDPOWER</name> &gt; -1</expr></cpp:if>
    <expr_stmt><expr><call><name>SET_OUTPUT</name><argument_list>(<argument><expr><name>SDPOWER</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
    <expr_stmt><expr><call><name>WRITE</name><argument_list>(<argument><expr><name>SDPOWER</name></expr></argument>,<argument><expr><name>HIGH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> <comment type="line">//SDPOWER</comment>
  
  <expr_stmt><expr><name>autostart_atmillis</name>=<call><name>millis</name><argument_list>()</argument_list></call>+5000</expr>;</expr_stmt>
}</block></constructor></unit>
