<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C++" filename="testcpp/Marlin/cardreader/2way/1/A.cpp">
<function><type><name>void</name></type> <name><name>CardReader</name>::<name>initsd</name></name><parameter_list>()</parameter_list>
<block>{
  <expr_stmt><expr><name>cardOK</name> = false</expr>;</expr_stmt>
  <if>if<condition>(<expr><call><name><name>root</name>.<name>isOpen</name></name><argument_list>()</argument_list></call></expr>)</condition><then>
    <expr_stmt><expr><call><name><name>root</name>.<name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt></then></if>
<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>SDSLOW</name></cpp:ifdef>
  <if>if <condition>(<expr>!<call><name><name>card</name>.<name>init</name></name><argument_list>(<argument><expr><name>SPI_HALF_SPEED</name></expr></argument>,<argument><expr><name>SDSS</name></expr></argument>)</argument_list></call>
  <cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>LCD_SDSS</name></expr></argument>)</argument_list></call> &amp;&amp; (<name>LCD_SDSS</name> != <name>SDSS</name>)</expr></cpp:if>
    &amp;&amp; !<call><name><name>card</name>.<name>init</name></name><argument_list>(<argument><expr><name>SPI_HALF_SPEED</name></expr></argument>,<argument><expr><name>LCD_SDSS</name></expr></argument>)</argument_list></call></expr>
  <cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
    )</condition><then>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
  <if>if <condition>(<expr>!<macro><name>card</name></macro>.<call><name>init</name><argument_list>(<argument><expr><name>SPI_FULL_SPEED</name></expr></argument>,<argument><expr><name>SDSS</name></expr></argument>)</argument_list></call>
  <cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>LCD_SDSS</name></expr></argument>)</argument_list></call> &amp;&amp; (<name>LCD_SDSS</name> != <name>SDSS</name>)</expr></cpp:if>
    &amp;&amp; !<call><name><name>card</name>.<name>init</name></name><argument_list>(<argument><expr><name>SPI_FULL_SPEED</name></expr></argument>,<argument><expr><name>LCD_SDSS</name></expr></argument>)</argument_list></call></expr>
  <cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
    )</condition><then>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
  <block>{
    <comment type="line">//if (!card.init(SPI_HALF_SPEED,SDSS))</comment>
    <expr_stmt><expr><name>SERIAL_ECHO_START</name></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>SERIAL_ECHOLNPGM</name><argument_list>(<argument><expr><name>MSG_SD_INIT_FAIL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></then>
  <else>else <if>if <condition>(<expr>!<call><name><name>volume</name>.<name>init</name></name><argument_list>(<argument><expr>&amp;<name>card</name></expr></argument>)</argument_list></call></expr>)</condition><then>
  <block>{
    <expr_stmt><expr><name>SERIAL_ERROR_START</name></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>SERIAL_ERRORLNPGM</name><argument_list>(<argument><expr><name>MSG_SD_VOL_INIT_FAIL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></then>
  <else>else <if>if <condition>(<expr>!<call><name><name>root</name>.<name>openRoot</name></name><argument_list>(<argument><expr>&amp;<name>volume</name></expr></argument>)</argument_list></call></expr>)</condition><then> 
  <block>{
    <expr_stmt><expr><name>SERIAL_ERROR_START</name></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>SERIAL_ERRORLNPGM</name><argument_list>(<argument><expr><name>MSG_SD_OPENROOT_FAIL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></then>
  <else>else 
  <block>{
    <expr_stmt><expr><name>cardOK</name> = true</expr>;</expr_stmt>
    <expr_stmt><expr><name>SERIAL_ECHO_START</name></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>SERIAL_ECHOLNPGM</name><argument_list>(<argument><expr><name>MSG_SD_CARD_OK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></else></if></else></if></else></if></then></if>
  <expr_stmt><expr><name>workDir</name>=<name>root</name></expr>;</expr_stmt>
  <expr_stmt><expr><name>curDir</name>=&amp;<name>root</name></expr>;</expr_stmt>
  <comment type="block">/*
  if(!workDir.openRoot(&amp;volume))
  {
    SERIAL_ECHOLNPGM(MSG_SD_WORKDIR_FAIL);
  }
  */</comment>
  
}</block></function></unit>
