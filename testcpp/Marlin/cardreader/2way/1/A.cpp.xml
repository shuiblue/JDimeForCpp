<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C++" filename="testcpp/Marlin/cardreader/2way/1/A.cpp"><function><type><name>void</name></type> <name><name>CardReader</name>::<name>lsDive</name></name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>prepend</name></decl></param>, <param><decl><type><name>SdFile</name></type> <name>parent</name></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name> * <specifier>const</specifier></type> <name>match</name></decl></param><comment type="block">/*=NULL*/</comment>)</parameter_list>
<block>{
  <decl_stmt><decl><type><name>dir_t</name></type> <name>p</name></decl>;</decl_stmt>
 <decl_stmt><decl><type><name>uint8_t</name></type> <name>cnt</name><init>=<expr>0</expr></init></decl>;</decl_stmt>
 
  <while>while <condition>(<expr><call><name><name>parent</name>.<name>readDir</name></name><argument_list>(<argument><expr><name>p</name></expr></argument>, <argument><expr><name>longFilename</name></expr></argument>)</argument_list></call> &gt; 0</expr>)</condition>
  <block>{
    <if>if<condition>( <expr><call><name>DIR_IS_SUBDIR</name><argument_list>(<argument><expr>&amp;<name>p</name></expr></argument>)</argument_list></call> &amp;&amp; <name>lsAction</name>!=<name>LS_Count</name> &amp;&amp; <name>lsAction</name>!=<name>LS_GetFilename</name></expr>)</condition><then> <comment type="line">// hence LS_SerialPrint</comment>
    <block>{

      <decl_stmt><decl><type><name>char</name></type> <name><name>path</name><index>[<expr>13*2</expr>]</index></name></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>char</name></type> <name><name>lfilename</name><index>[<expr>13</expr>]</index></name></decl>;</decl_stmt>
      <expr_stmt><expr><call><name>createFilename</name><argument_list>(<argument><expr><name>lfilename</name></expr></argument>,<argument><expr><name>p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      
      <expr_stmt><expr><name><name>path</name><index>[<expr>0</expr>]</index></name>=0</expr>;</expr_stmt>
      <if>if<condition>(<expr><call><name>strlen</name><argument_list>(<argument><expr><name>prepend</name></expr></argument>)</argument_list></call>==0</expr>)</condition><then> <comment type="line">//avoid leading / if already in prepend</comment>
      <block>{
       <expr_stmt><expr><call><name>strcat</name><argument_list>(<argument><expr><name>path</name></expr></argument>,<argument><expr>"/"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
      }</block></then></if>
      <expr_stmt><expr><call><name>strcat</name><argument_list>(<argument><expr><name>path</name></expr></argument>,<argument><expr><name>prepend</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name>strcat</name><argument_list>(<argument><expr><name>path</name></expr></argument>,<argument><expr><name>lfilename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name>strcat</name><argument_list>(<argument><expr><name>path</name></expr></argument>,<argument><expr>"/"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
      
      <comment type="line">//Serial.print(path);</comment>
      
      <decl_stmt><decl><type><name>SdFile</name></type> <name>dir</name></decl>;</decl_stmt>
      <if>if<condition>(<expr>!<call><name><name>dir</name>.<name>open</name></name><argument_list>(<argument><expr><name>parent</name></expr></argument>,<argument><expr><name>lfilename</name></expr></argument>, <argument><expr><name>O_READ</name></expr></argument>)</argument_list></call></expr>)</condition><then>
      <block>{
        <if>if<condition>(<expr><name>lsAction</name>==<name>LS_SerialPrint</name></expr>)</condition><then>
        <block>{
          <expr_stmt><expr><name>SERIAL_ECHO_START</name></expr>;</expr_stmt>
          <expr_stmt><expr><call><name>SERIAL_ECHOLN</name><argument_list>(<argument><expr><name>MSG_SD_CANT_OPEN_SUBDIR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <expr_stmt><expr><call><name>SERIAL_ECHOLN</name><argument_list>(<argument><expr><name>lfilename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></then></if>
      }</block></then></if>
      <expr_stmt><expr><call><name>lsDive</name><argument_list>(<argument><expr><name>path</name></expr></argument>,<argument><expr><name>dir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <comment type="line">//close done automatically by destructor of SdFile</comment>

      
    }</block></then>
    <else>else
    <block>{
      <decl_stmt><decl><type><name>char</name></type> <name>pn0</name> <init>= <expr><name><name>p</name>.<name>name</name><index>[<expr>0</expr>]</index></name></expr></init></decl>;</decl_stmt>
      <if>if <condition>(<expr><name>pn0</name> == <name>DIR_NAME_FREE</name></expr>)</condition><then> <break>break;</break></then></if>
      <if>if <condition>(<expr><name>pn0</name> == <name>DIR_NAME_DELETED</name> || <name>pn0</name> == '.' || <name>pn0</name> == '_'</expr>)</condition><then> <continue>continue;</continue></then></if>
      <decl_stmt><decl><type><name>char</name></type> <name>lf0</name> <init>= <expr><name><name>longFilename</name><index>[<expr>0</expr>]</index></name></expr></init></decl>;</decl_stmt>
      <if>if <condition>(<expr><name>lf0</name> == '.' || <name>lf0</name> == '_'</expr>)</condition><then> <continue>continue;</continue></then></if>

      <if>if <condition>(<expr>!<call><name>DIR_IS_FILE_OR_SUBDIR</name><argument_list>(<argument><expr>&amp;<name>p</name></expr></argument>)</argument_list></call></expr>)</condition><then> <continue>continue;</continue></then></if>
      <expr_stmt><expr><name>filenameIsDir</name>=<call><name>DIR_IS_SUBDIR</name><argument_list>(<argument><expr>&amp;<name>p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      
      
      <if>if<condition>(<expr>!<name>filenameIsDir</name></expr>)</condition><then>
      <block>{
        <if>if<condition>(<expr><name><name>p</name>.<name>name</name><index>[<expr>8</expr>]</index></name>!='G'</expr>)</condition><then> <continue>continue;</continue></then></if>
        <if>if<condition>(<expr><name><name>p</name>.<name>name</name><index>[<expr>9</expr>]</index></name>=='~'</expr>)</condition><then> <continue>continue;</continue></then></if>
      }</block></then></if>
      <comment type="line">//if(cnt++!=nr) continue;</comment>
      <expr_stmt><expr><call><name>createFilename</name><argument_list>(<argument><expr><name>filename</name></expr></argument>,<argument><expr><name>p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <if>if<condition>(<expr><name>lsAction</name>==<name>LS_SerialPrint</name></expr>)</condition><then>
      <block>{
        <expr_stmt><expr><call><name>SERIAL_PROTOCOL</name><argument_list>(<argument><expr><name>prepend</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>SERIAL_PROTOCOLLN</name><argument_list>(<argument><expr><name>filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      }</block></then>
      <else>else <if>if<condition>(<expr><name>lsAction</name>==<name>LS_Count</name></expr>)</condition><then>
      <block>{
        <expr_stmt><expr><name>nrFiles</name>++</expr>;</expr_stmt>
      }</block></then> 
      <else>else <if>if<condition>(<expr><name>lsAction</name>==<name>LS_GetFilename</name></expr>)</condition><then>
      <block>{
        <if>if <condition>(<expr><name>match</name> != <name>NULL</name></expr>)</condition><then> <block>{
          <if>if <condition>(<expr><call><name>strcasecmp</name><argument_list>(<argument><expr><name>match</name></expr></argument>, <argument><expr><name>filename</name></expr></argument>)</argument_list></call> == 0</expr>)</condition><then> <return>return;</return></then></if>
        }</block></then>
        <else>else <if>if <condition>(<expr><name>cnt</name> == <name>nrFiles</name></expr>)</condition><then> <return>return;</return></then></if></else></if>
        <expr_stmt><expr><name>cnt</name>++</expr>;</expr_stmt>
        
      }</block></then></if></else></if></else></if>
    }</block></else></if>
  }</block></while>
}</block></function></unit>
